{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCreaterReceivedInitialSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506119068061002d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c8063cc8668de116200006e578063cc8668de14620000f9578063d591221f1462000103578063eb7492d1146200010d578063fa7626d41462000117578063fc0c546a146200012557600080fd5b80630a9254e414620000b05780632bcb327014620000bc5780635d4696cf14620000c657806377fc70c614620000d0578063ba414fa614620000da575b600080fd5b620000ba62000152565b005b620000ba620001f7565b620000ba6200027c565b620000ba620002fa565b620000e462000392565b60405190151581526020015b60405180910390f35b620000ba620004c7565b620000ba62000566565b620000ba620007e7565b600054620000e49060ff1681565b60135462000139906001600160a01b031681565b6040516001600160a01b039091168152602001620000f0565b601269054b40b1f852bda000006040516200016d9062000b75565b6080808252600990820152682a32b9ba2a37b5b2b760b91b60a082015260c06020820181905260029082015261151560f21b60e082015260ff9092166040830152606082015261010001604051809103906000f080158015620001d4573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055565b6013546040516370a0823160e01b81523060048201526200027a916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000243573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000269919062000b83565b69054b40b1f852bda0000062000834565b565b6013546040805163313ce56760e01b815290516200027a926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015620002c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ef919062000b9d565b60ff16601262000834565b601354604080516395d89b4160e01b815290516200027a926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801562000347573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000371919081019062000c05565b60405180604001604052806002815260200161151560f21b8152506200092b565b60008054610100900460ff1615620003b35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620004c25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000444917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000cbe565b60408051601f1981840301815290829052620004609162000cf1565b6000604051808303816000865af19150503d80600081146200049f576040519150601f19603f3d011682016040523d82523d6000602084013e620004a4565b606091505b5091505080806020019051810190620004be919062000d0f565b9150505b919050565b601354604080516306fdde0360e01b815290516200027a926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000514573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200053e919081019062000c05565b604051806040016040528060098152602001682a32b9ba2a37b5b2b760b91b8152506200092b565b6013546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015620005b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005d6919062000b83565b6013546040516370a0823160e01b81526000600482018190529293506001600160a01b03909116906370a0823190602401602060405180830381865afa15801562000625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200064b919062000b83565b60135460405163a9059cbb60e01b8152600060048201526801158e460913d0000060248201529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015620006a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006cd919062000d0f565b506013546040516370a0823160e01b8152600060048201526200075c916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000741919062000b83565b62000756836801158e460913d0000062000d49565b62000834565b6013546040516370a0823160e01b8152306004820152620007e3916001600160a01b0316906370a0823190602401602060405180830381865afa158015620007a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ce919062000b83565b620007566801158e460913d000008562000d65565b5050565b601354604080516318160ddd60e01b815290516200027a926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000243573d6000803e3d6000fd5b808214620007e3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620008a79060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620008e0919062000d7b565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000919919062000db4565b60405180910390a1620007e362000a62565b806040516020016200093e919062000cf1565b604051602081830303815290604052805190602001208260405160200162000967919062000cf1565b6040516020818303038152906040528051906020012014620007e3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620009f09060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162000a29919062000e0d565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162000919919062000e54565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000b645760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000aff929160200162000cbe565b60408051601f198184030181529082905262000b1b9162000cf1565b6000604051808303816000865af19150503d806000811462000b5a576040519150601f19603f3d011682016040523d82523d6000602084013e62000b5f565b606091505b505050505b6000805461ff001916610100179055565b610a518062000e8083390190565b60006020828403121562000b9657600080fd5b5051919050565b60006020828403121562000bb057600080fd5b815160ff8116811462000bc257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000bfc57818101518382015260200162000be2565b50506000910152565b60006020828403121562000c1857600080fd5b815167ffffffffffffffff8082111562000c3157600080fd5b818401915084601f83011262000c4657600080fd5b81518181111562000c5b5762000c5b62000bc9565b604051601f8201601f19908116603f0116810190838211818310171562000c865762000c8662000bc9565b8160405282815287602084870101111562000ca057600080fd5b62000cb383602083016020880162000bdf565b979650505050505050565b6001600160e01b031983168152815160009062000ce381600485016020870162000bdf565b919091016004019392505050565b6000825162000d0581846020870162000bdf565b9190910192915050565b60006020828403121562000d2257600080fd5b8151801515811462000bc257600080fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111562000d5f5762000d5f62000d33565b92915050565b8181038181111562000d5f5762000d5f62000d33565b60408152600062000da660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062000da660408301600a815269080808081058dd1d585b60b21b602082015260400190565b6000815180845262000df981602086016020860162000bdf565b601f01601f19169290920160200192915050565b60408152600062000e3860408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262000e4c818562000ddf565b949350505050565b60408152600062000e3860408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60806040523480156200001157600080fd5b5060405162000a5138038062000a5183398101604081905262000034916200014a565b600062000042858262000264565b50600162000051848262000264565b506002805460ff191660ff939093169290921790915560038190553360009081526004602052604090205550620003309050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ad57600080fd5b81516001600160401b0380821115620000ca57620000ca62000085565b604051601f8301601f19908116603f01168101908282118183101715620000f557620000f562000085565b816040528381526020925086838588010111156200011257600080fd5b600091505b8382101562000136578582018301518183018401529082019062000117565b600093810190920192909252949350505050565b600080600080608085870312156200016157600080fd5b84516001600160401b03808211156200017957600080fd5b62000187888389016200009b565b955060208701519150808211156200019e57600080fd5b50620001ad878288016200009b565b935050604085015160ff81168114620001c557600080fd5b6060959095015193969295505050565b600181811c90821680620001ea57607f821691505b6020821081036200020b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025f57600081815260208120601f850160051c810160208610156200023a5750805b601f850160051c820191505b818110156200025b5782815560010162000246565b5050505b505050565b81516001600160401b0381111562000280576200028062000085565b6200029881620002918454620001d5565b8462000211565b602080601f831160018114620002d05760008415620002b75750858301515b600019600386901b1c1916600185901b1785556200025b565b600085815260208120601f198616915b828110156200030157888601518255948401946001909101908401620002e0565b5085821015620003205787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61071180620003406000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461011357806395d89b411461013c578063a9059cbb14610144578063dd62ed3e1461015757600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a0610190565b6040516100ad9190610540565b60405180910390f35b6100c96100c43660046105aa565b610222565b60405190151581526020016100ad565b6003545b6040519081526020016100ad565b6100c96100f93660046105d4565b6102e1565b60025460405160ff90911681526020016100ad565b6100dd610121366004610610565b6001600160a01b031660009081526004602052604090205490565b6100a061044f565b6100c96101523660046105aa565b61045e565b6100dd610165366004610632565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60606000805461019f90610665565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb90610665565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b3360009081526004602052604081205482111561027b5760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064015b60405180910390fd5b3360008181526005602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600460205260408120548211156103495760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f7567682062616c616e63652066726f6d205f66726f6d0000006044820152606401610272565b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156103b35760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f75676820616c6c6f77616e636560601b6044820152606401610272565b6001600160a01b038416600090815260046020526040812080548492906103db9084906106b5565b90915550506001600160a01b038316600090815260046020526040812080548492906104089084906106c8565b90915550506001600160a01b0384166000908152600560209081526040808320338452909152812080548492906104409084906106b5565b90915550600195945050505050565b60606001805461019f90610665565b336000908152600460205260408120548211156104b25760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b6044820152606401610272565b33600090815260046020526040812080548492906104d19084906106b5565b90915550506001600160a01b038316600090815260046020526040812080548492906104fe9084906106c8565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102cf565b600060208083528351808285015260005b8181101561056d57858101830151858201604001528201610551565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105a557600080fd5b919050565b600080604083850312156105bd57600080fd5b6105c68361058e565b946020939093013593505050565b6000806000606084860312156105e957600080fd5b6105f28461058e565b92506106006020850161058e565b9150604084013590509250925092565b60006020828403121561062257600080fd5b61062b8261058e565b9392505050565b6000806040838503121561064557600080fd5b61064e8361058e565b915061065c6020840161058e565b90509250929050565b600181811c9082168061067957607f821691505b60208210810361069957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102db576102db61069f565b808201808211156102db576102db61069f56fea2646970667358221220ff371366c4444f6d5dad0967047b49d5bb44c0eb5f5cdc7337c010726f3a57b464736f6c63430008110033a264697066735822122038d5615335c58cc58d9aeb2e01a439641590c84b074a350281a0001f9540198364736f6c63430008110033",
    "sourceMap": "129:1040:16:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;129:1040:16;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c8063cc8668de116200006e578063cc8668de14620000f9578063d591221f1462000103578063eb7492d1146200010d578063fa7626d41462000117578063fc0c546a146200012557600080fd5b80630a9254e414620000b05780632bcb327014620000bc5780635d4696cf14620000c657806377fc70c614620000d0578063ba414fa614620000da575b600080fd5b620000ba62000152565b005b620000ba620001f7565b620000ba6200027c565b620000ba620002fa565b620000e462000392565b60405190151581526020015b60405180910390f35b620000ba620004c7565b620000ba62000566565b620000ba620007e7565b600054620000e49060ff1681565b60135462000139906001600160a01b031681565b6040516001600160a01b039091168152602001620000f0565b601269054b40b1f852bda000006040516200016d9062000b75565b6080808252600990820152682a32b9ba2a37b5b2b760b91b60a082015260c06020820181905260029082015261151560f21b60e082015260ff9092166040830152606082015261010001604051809103906000f080158015620001d4573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055565b6013546040516370a0823160e01b81523060048201526200027a916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000243573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000269919062000b83565b69054b40b1f852bda0000062000834565b565b6013546040805163313ce56760e01b815290516200027a926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015620002c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ef919062000b9d565b60ff16601262000834565b601354604080516395d89b4160e01b815290516200027a926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801562000347573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000371919081019062000c05565b60405180604001604052806002815260200161151560f21b8152506200092b565b60008054610100900460ff1615620003b35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620004c25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000444917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000cbe565b60408051601f1981840301815290829052620004609162000cf1565b6000604051808303816000865af19150503d80600081146200049f576040519150601f19603f3d011682016040523d82523d6000602084013e620004a4565b606091505b5091505080806020019051810190620004be919062000d0f565b9150505b919050565b601354604080516306fdde0360e01b815290516200027a926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000514573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200053e919081019062000c05565b604051806040016040528060098152602001682a32b9ba2a37b5b2b760b91b8152506200092b565b6013546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015620005b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005d6919062000b83565b6013546040516370a0823160e01b81526000600482018190529293506001600160a01b03909116906370a0823190602401602060405180830381865afa15801562000625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200064b919062000b83565b60135460405163a9059cbb60e01b8152600060048201526801158e460913d0000060248201529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015620006a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006cd919062000d0f565b506013546040516370a0823160e01b8152600060048201526200075c916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000741919062000b83565b62000756836801158e460913d0000062000d49565b62000834565b6013546040516370a0823160e01b8152306004820152620007e3916001600160a01b0316906370a0823190602401602060405180830381865afa158015620007a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ce919062000b83565b620007566801158e460913d000008562000d65565b5050565b601354604080516318160ddd60e01b815290516200027a926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000243573d6000803e3d6000fd5b808214620007e3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620008a79060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620008e0919062000d7b565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000919919062000db4565b60405180910390a1620007e362000a62565b806040516020016200093e919062000cf1565b604051602081830303815290604052805190602001208260405160200162000967919062000cf1565b6040516020818303038152906040528051906020012014620007e3577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620009f09060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162000a29919062000e0d565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162000919919062000e54565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000b645760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000aff929160200162000cbe565b60408051601f198184030181529082905262000b1b9162000cf1565b6000604051808303816000865af19150503d806000811462000b5a576040519150601f19603f3d011682016040523d82523d6000602084013e62000b5f565b606091505b505050505b6000805461ff001916610100179055565b610a518062000e8083390190565b60006020828403121562000b9657600080fd5b5051919050565b60006020828403121562000bb057600080fd5b815160ff8116811462000bc257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000bfc57818101518382015260200162000be2565b50506000910152565b60006020828403121562000c1857600080fd5b815167ffffffffffffffff8082111562000c3157600080fd5b818401915084601f83011262000c4657600080fd5b81518181111562000c5b5762000c5b62000bc9565b604051601f8201601f19908116603f0116810190838211818310171562000c865762000c8662000bc9565b8160405282815287602084870101111562000ca057600080fd5b62000cb383602083016020880162000bdf565b979650505050505050565b6001600160e01b031983168152815160009062000ce381600485016020870162000bdf565b919091016004019392505050565b6000825162000d0581846020870162000bdf565b9190910192915050565b60006020828403121562000d2257600080fd5b8151801515811462000bc257600080fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111562000d5f5762000d5f62000d33565b92915050565b8181038181111562000d5f5762000d5f62000d33565b60408152600062000da660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062000da660408301600a815269080808081058dd1d585b60b21b602082015260400190565b6000815180845262000df981602086016020860162000bdf565b601f01601f19169290920160200192915050565b60408152600062000e3860408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262000e4c818562000ddf565b949350505050565b60408152600062000e3860408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60806040523480156200001157600080fd5b5060405162000a5138038062000a5183398101604081905262000034916200014a565b600062000042858262000264565b50600162000051848262000264565b506002805460ff191660ff939093169290921790915560038190553360009081526004602052604090205550620003309050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ad57600080fd5b81516001600160401b0380821115620000ca57620000ca62000085565b604051601f8301601f19908116603f01168101908282118183101715620000f557620000f562000085565b816040528381526020925086838588010111156200011257600080fd5b600091505b8382101562000136578582018301518183018401529082019062000117565b600093810190920192909252949350505050565b600080600080608085870312156200016157600080fd5b84516001600160401b03808211156200017957600080fd5b62000187888389016200009b565b955060208701519150808211156200019e57600080fd5b50620001ad878288016200009b565b935050604085015160ff81168114620001c557600080fd5b6060959095015193969295505050565b600181811c90821680620001ea57607f821691505b6020821081036200020b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025f57600081815260208120601f850160051c810160208610156200023a5750805b601f850160051c820191505b818110156200025b5782815560010162000246565b5050505b505050565b81516001600160401b0381111562000280576200028062000085565b6200029881620002918454620001d5565b8462000211565b602080601f831160018114620002d05760008415620002b75750858301515b600019600386901b1c1916600185901b1785556200025b565b600085815260208120601f198616915b828110156200030157888601518255948401946001909101908401620002e0565b5085821015620003205787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61071180620003406000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461011357806395d89b411461013c578063a9059cbb14610144578063dd62ed3e1461015757600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a0610190565b6040516100ad9190610540565b60405180910390f35b6100c96100c43660046105aa565b610222565b60405190151581526020016100ad565b6003545b6040519081526020016100ad565b6100c96100f93660046105d4565b6102e1565b60025460405160ff90911681526020016100ad565b6100dd610121366004610610565b6001600160a01b031660009081526004602052604090205490565b6100a061044f565b6100c96101523660046105aa565b61045e565b6100dd610165366004610632565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60606000805461019f90610665565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb90610665565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b3360009081526004602052604081205482111561027b5760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064015b60405180910390fd5b3360008181526005602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600460205260408120548211156103495760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f7567682062616c616e63652066726f6d205f66726f6d0000006044820152606401610272565b6001600160a01b03841660009081526005602090815260408083203384529091529020548211156103b35760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f75676820616c6c6f77616e636560601b6044820152606401610272565b6001600160a01b038416600090815260046020526040812080548492906103db9084906106b5565b90915550506001600160a01b038316600090815260046020526040812080548492906104089084906106c8565b90915550506001600160a01b0384166000908152600560209081526040808320338452909152812080548492906104409084906106b5565b90915550600195945050505050565b60606001805461019f90610665565b336000908152600460205260408120548211156104b25760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b6044820152606401610272565b33600090815260046020526040812080548492906104d19084906106b5565b90915550506001600160a01b038316600090815260046020526040812080548492906104fe9084906106c8565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102cf565b600060208083528351808285015260005b8181101561056d57858101830151858201604001528201610551565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105a557600080fd5b919050565b600080604083850312156105bd57600080fd5b6105c68361058e565b946020939093013593505050565b6000806000606084860312156105e957600080fd5b6105f28461058e565b92506106006020850161058e565b9150604084013590509250925092565b60006020828403121561062257600080fd5b61062b8261058e565b9392505050565b6000806040838503121561064557600080fd5b61064e8361058e565b915061065c6020840161058e565b90509250929050565b600181811c9082168061067957607f821691505b60208210810361069957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102db576102db61069f565b808201808211156102db576102db61069f56fea2646970667358221220ff371366c4444f6d5dad0967047b49d5bb44c0eb5f5cdc7337c010726f3a57b464736f6c63430008110033a264697066735822122038d5615335c58cc58d9aeb2e01a439641590c84b074a350281a0001f9540198364736f6c63430008110033",
    "sourceMap": "129:1040:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;187:106;;;:::i;:::-;;661:137;;;:::i;466:78::-;;;:::i;384:76::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:17;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;;299:79:16;;;:::i;804:363::-;;;:::i;550:105::-;;;:::i;1572:26:0:-;;;;;;;;;162:18:16;;;;;-1:-1:-1;;;;;162:18:16;;;;;;-1:-1:-1;;;;;385:32:17;;;367:51;;355:2;340:18;162::16;206:218:17;187:106:16;258:2;262:23;229:57;;;;;:::i;:::-;825:3:17;807:22;;;866:1;845:19;;;838:30;-1:-1:-1;;;899:3:17;884:19;;877:40;955:3;948:4;933:20;;926:33;;;996:1;975:19;;;968:30;-1:-1:-1;;;1029:3:17;1014:19;;1007:33;1124:4;1112:17;;;1107:2;1092:18;;1085:45;-1:-1:-1;1146:18:17;;1139:34;1072:3;1057:19;229:57:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:5:16;:65;;-1:-1:-1;;;;;;221:65:16;-1:-1:-1;;;;;221:65:16;;;;;;;;;;187:106::o;661:137::-;735:5;;:30;;-1:-1:-1;;;735:30:16;;759:4;735:30;;;367:51:17;726:65:16;;-1:-1:-1;;;;;735:5:16;;:15;;340:18:17;;735:30:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;767:23;726:8;:65::i;:::-;661:137::o;466:78::-;516:5;;:16;;;-1:-1:-1;;;516:16:16;;;;507:30;;-1:-1:-1;;;;;516:5:16;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;507:30;;534:2;507:8;:30::i;384:76::-;432:5;;:14;;;-1:-1:-1;;;432:14:16;;;;423:30;;-1:-1:-1;;;;;432:5:16;;:12;;:14;;;;;:5;;:14;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;432:14:16;;;;;;;;;;;;:::i;:::-;423:30;;;;;;;;;;;;;-1:-1:-1;;;423:30:16;;;:8;:30::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;3322:51:17;;;-1:-1:-1;;;3389:18:17;;;3382:34;2196:43:0;;;;;;;;;3295:18:17;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;299:79:16:-;345:5;;:12;;;-1:-1:-1;;;345:12:16;;;;336:35;;-1:-1:-1;;;;;345:5:16;;:10;;:12;;;;;:5;;:12;;;;;;;:5;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;345:12:16;;;;;;;;;;;;:::i;:::-;336:35;;;;;;;;;;;;;-1:-1:-1;;;336:35:16;;;:8;:35::i;804:363::-;873:5;;:30;;-1:-1:-1;;;873:30:16;;897:4;873:30;;;367:51:17;845:25:16;;-1:-1:-1;;;;;873:5:16;;:15;;340:18:17;;873:30:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;939:5;;:27;;-1:-1:-1;;;939:27:16;;913:23;939:27;;;367:51:17;;;845:58:16;;-1:-1:-1;;;;;;939:5:16;;;;:15;;340:18:17;;939:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;976:5;;:33;;-1:-1:-1;;;976:33:16;;:5;:33;;;3322:51:17;1003:5:16;3389:18:17;;;3382:34;913:53:16;;-1:-1:-1;;;;;;976:5:16;;:14;;3295:18:17;;976:33:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1029:5:16;;:27;;-1:-1:-1;;;1029:27:16;;:5;:27;;;367:51:17;1020:62:16;;-1:-1:-1;;;;;1029:5:16;;:15;;340:18:17;;1029:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1058:23;:15;1076:5;1058:23;:::i;:::-;1020:8;:62::i;:::-;1101:5;;:30;;-1:-1:-1;;;1101:30:16;;1125:4;1101:30;;;367:51:17;1092:67:16;;-1:-1:-1;;;;;1101:5:16;;:15;;340:18:17;;1101:30:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1133:25;1153:5;1133:17;:25;:::i;1092:67::-;835:332;;804:363::o;550:105::-;603:5;;:19;;;-1:-1:-1;;;603:19:16;;;;594:54;;-1:-1:-1;;;;;603:5:16;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;5202:262:0;5264:1;5259;:6;5255:203;;5286:41;;;;;5293:2:17;5275:21;;;5332:2;5312:18;;;5305:30;5371:34;5366:2;5351:18;;5344:62;-1:-1:-1;;;5437:2:17;5422:18;;5415:32;5479:3;5464:19;;5091:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;14688:344::-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;7024:2:17;7006:21;;;7063:2;7043:18;;;7036:30;7102:34;7097:2;7082:18;;7075:62;-1:-1:-1;;;7168:2:17;7153:18;;7146:34;7212:3;7197:19;;6822:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;8595:51:17;;;-1:-1:-1;;;8662:18:17;;;8655:34;;;;2705:4:0;8705:18:17;;;8698:34;2482:11:0;;1671:64;2579:43;;8568:18:17;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;1392:184:17:-;1462:6;1515:2;1503:9;1494:7;1490:23;1486:32;1483:52;;;1531:1;1528;1521:12;1483:52;-1:-1:-1;1554:16:17;;1392:184;-1:-1:-1;1392:184:17:o;1581:273::-;1649:6;1702:2;1690:9;1681:7;1677:23;1673:32;1670:52;;;1718:1;1715;1708:12;1670:52;1750:9;1744:16;1800:4;1793:5;1789:16;1782:5;1779:27;1769:55;;1820:1;1817;1810:12;1769:55;1843:5;1581:273;-1:-1:-1;;;1581:273:17:o;1859:127::-;1920:10;1915:3;1911:20;1908:1;1901:31;1951:4;1948:1;1941:15;1975:4;1972:1;1965:15;1991:250;2076:1;2086:113;2100:6;2097:1;2094:13;2086:113;;;2176:11;;;2170:18;2157:11;;;2150:39;2122:2;2115:10;2086:113;;;-1:-1:-1;;2233:1:17;2215:16;;2208:27;1991:250::o;2246:897::-;2326:6;2379:2;2367:9;2358:7;2354:23;2350:32;2347:52;;;2395:1;2392;2385:12;2347:52;2428:9;2422:16;2457:18;2498:2;2490:6;2487:14;2484:34;;;2514:1;2511;2504:12;2484:34;2552:6;2541:9;2537:22;2527:32;;2597:7;2590:4;2586:2;2582:13;2578:27;2568:55;;2619:1;2616;2609:12;2568:55;2648:2;2642:9;2670:2;2666;2663:10;2660:36;;;2676:18;;:::i;:::-;2751:2;2745:9;2719:2;2805:13;;-1:-1:-1;;2801:22:17;;;2825:2;2797:31;2793:40;2781:53;;;2849:18;;;2869:22;;;2846:46;2843:72;;;2895:18;;:::i;:::-;2935:10;2931:2;2924:22;2970:2;2962:6;2955:18;3010:7;3005:2;3000;2996;2992:11;2988:20;2985:33;2982:53;;;3031:1;3028;3021:12;2982:53;3044:68;3109:2;3104;3096:6;3092:15;3087:2;3083;3079:11;3044:68;:::i;:::-;3131:6;2246:897;-1:-1:-1;;;;;;;2246:897:17:o;3427:384::-;-1:-1:-1;;;;;;3612:33:17;;3600:46;;3669:13;;3582:3;;3691:74;3669:13;3754:1;3745:11;;3738:4;3726:17;;3691:74;:::i;:::-;3785:16;;;;3803:1;3781:24;;3427:384;-1:-1:-1;;;3427:384:17:o;3816:287::-;3945:3;3983:6;3977:13;3999:66;4058:6;4053:3;4046:4;4038:6;4034:17;3999:66;:::i;:::-;4081:16;;;;;3816:287;-1:-1:-1;;3816:287:17:o;4108:277::-;4175:6;4228:2;4216:9;4207:7;4203:23;4199:32;4196:52;;;4244:1;4241;4234:12;4196:52;4276:9;4270:16;4329:5;4322:13;4315:21;4308:5;4305:32;4295:60;;4351:1;4348;4341:12;4696:127;4757:10;4752:3;4748:20;4745:1;4738:31;4788:4;4785:1;4778:15;4812:4;4809:1;4802:15;4828:125;4893:9;;;4914:10;;;4911:36;;;4927:18;;:::i;:::-;4828:125;;;;:::o;4958:128::-;5025:9;;;5046:11;;;5043:37;;;5060:18;;:::i;5658:348::-;5888:2;5877:9;5870:21;5851:4;5908:49;5953:2;5942:9;5938:18;5571:2;5559:15;;-1:-1:-1;;;5599:4:17;5590:14;;5583:36;5644:2;5635:12;;5494:159;5908:49;5900:57;;5993:6;5988:2;5977:9;5973:18;5966:34;5658:348;;;;:::o;6175:::-;6405:2;6394:9;6387:21;6368:4;6425:49;6470:2;6459:9;6455:18;6088:2;6076:15;;-1:-1:-1;;;6116:4:17;6107:14;;6100:36;6161:2;6152:12;;6011:159;7227:271;7269:3;7307:5;7301:12;7334:6;7329:3;7322:19;7350:76;7419:6;7412:4;7407:3;7403:14;7396:4;7389:5;7385:16;7350:76;:::i;:::-;7480:2;7459:15;-1:-1:-1;;7455:29:17;7446:39;;;;7487:4;7442:50;;7227:271;-1:-1:-1;;7227:271:17:o;7503:440::-;7753:2;7742:9;7735:21;7716:4;7779:49;7824:2;7813:9;7809:18;5571:2;5559:15;;-1:-1:-1;;;5599:4:17;5590:14;;5583:36;5644:2;5635:12;;5494:159;7779:49;7876:9;7868:6;7864:22;7859:2;7848:9;7844:18;7837:50;7904:33;7930:6;7922;7904:33;:::i;:::-;7896:41;7503:440;-1:-1:-1;;;;7503:440:17:o;7948:::-;8198:2;8187:9;8180:21;8161:4;8224:49;8269:2;8258:9;8254:18;6088:2;6076:15;;-1:-1:-1;;;6116:4:17;6107:14;;6100:36;6161:2;6152:12;;6011:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCreaterReceivedInitialSupply()": "2bcb3270",
    "testDecimals()": "5d4696cf",
    "testName()": "cc8668de",
    "testSymbol()": "77fc70c6",
    "testTotalSupply()": "eb7492d1",
    "testTransfer()": "d591221f",
    "token()": "fc0c546a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCreaterReceivedInitialSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20/test/ERC20.t.sol\":\"ERC20Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"src/ERC20/ERC20.sol\":{\"keccak256\":\"0x410bbe01ab7f1d9bca894bc986bfe02143733d137570e57504568799c25000b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0369c406ecb5f2190fb82460d6ae0c213ee7cd26a23f2ee75b898cc9e788d62\",\"dweb:/ipfs/QmNcio7DEX4H5epAwQvhVYLTPz14DUyiiyz4JJo8G4ZVsi\"]},\"src/ERC20/IERC20.sol\":{\"keccak256\":\"0x6eb2a2060d9370609b6e6eeb0ddd5a820e0ac37b676ead38506f1eacbce98dbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf16da37105dc9488657d57b7c82018c43429a3316e61f7cad21cad8530455ba\",\"dweb:/ipfs/QmcAWTPno7F8aPJBafYFRGYFE8KsTZCBAX3YfSAdF5GvTg\"]},\"src/ERC20/test/ERC20.t.sol\":{\"keccak256\":\"0xa7102013487f5413fae5a9eb8cf325365179039de2ba4ad31830e0ce9182ef18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://886364414f5b1845da8262b9af1dbce16430548befe4b4975030db53416ffa18\",\"dweb:/ipfs/QmYeRDdmbPuNUYChHVdhMiPwmuF3qa9pGwyqvvjYkt5iu4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCreaterReceivedInitialSupply"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDecimals"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testName"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSymbol"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTotalSupply"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ERC20/test/ERC20.t.sol": "ERC20Test"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "src/ERC20/ERC20.sol": {
        "keccak256": "0x410bbe01ab7f1d9bca894bc986bfe02143733d137570e57504568799c25000b3",
        "urls": [
          "bzz-raw://b0369c406ecb5f2190fb82460d6ae0c213ee7cd26a23f2ee75b898cc9e788d62",
          "dweb:/ipfs/QmNcio7DEX4H5epAwQvhVYLTPz14DUyiiyz4JJo8G4ZVsi"
        ],
        "license": "MIT"
      },
      "src/ERC20/IERC20.sol": {
        "keccak256": "0x6eb2a2060d9370609b6e6eeb0ddd5a820e0ac37b676ead38506f1eacbce98dbe",
        "urls": [
          "bzz-raw://bf16da37105dc9488657d57b7c82018c43429a3316e61f7cad21cad8530455ba",
          "dweb:/ipfs/QmcAWTPno7F8aPJBafYFRGYFE8KsTZCBAX3YfSAdF5GvTg"
        ],
        "license": "MIT"
      },
      "src/ERC20/test/ERC20.t.sol": {
        "keccak256": "0xa7102013487f5413fae5a9eb8cf325365179039de2ba4ad31830e0ce9182ef18",
        "urls": [
          "bzz-raw://886364414f5b1845da8262b9af1dbce16430548befe4b4975030db53416ffa18",
          "dweb:/ipfs/QmYeRDdmbPuNUYChHVdhMiPwmuF3qa9pGwyqvvjYkt5iu4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ERC20/test/ERC20.t.sol",
    "id": 25959,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC20": [
        25730
      ],
      "ERC20Test": [
        25958
      ],
      "IERC20": [
        25814
      ],
      "StdAssertions": [
        2671
      ],
      "StdChains": [
        3207
      ],
      "StdCheats": [
        5144
      ],
      "StdStorage": [
        6051
      ],
      "StdUtils": [
        8116
      ],
      "Test": [
        8158
      ],
      "TestBase": [
        1843
      ],
      "Vm": [
        9315
      ],
      "console": [
        17379
      ],
      "console2": [
        25475
      ],
      "stdError": [
        5210
      ],
      "stdJson": [
        5877
      ],
      "stdMath": [
        6019
      ],
      "stdStorage": [
        7485
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1136:16",
    "nodes": [
      {
        "id": 25816,
        "nodeType": "PragmaDirective",
        "src": "33:24:16",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 25817,
        "nodeType": "ImportDirective",
        "src": "59:45:16",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "../../../lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25959,
        "sourceUnit": 8159,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25818,
        "nodeType": "ImportDirective",
        "src": "105:22:16",
        "nodes": [],
        "absolutePath": "src/ERC20/ERC20.sol",
        "file": "../ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25959,
        "sourceUnit": 25731,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25958,
        "nodeType": "ContractDefinition",
        "src": "129:1040:16",
        "nodes": [
          {
            "id": 25823,
            "nodeType": "VariableDeclaration",
            "src": "162:18:16",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "175:5:16",
            "scope": 25958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$25730",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 25822,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25821,
                "name": "ERC20",
                "nameLocations": [
                  "162:5:16"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25730,
                "src": "162:5:16"
              },
              "referencedDeclaration": 25730,
              "src": "162:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$25730",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25838,
            "nodeType": "FunctionDefinition",
            "src": "187:106:16",
            "nodes": [],
            "body": {
              "id": 25837,
              "nodeType": "Block",
              "src": "211:82:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25826,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25823,
                      "src": "221:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25730",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374546f6b656e",
                          "id": 25830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "239:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          "value": "TestToken"
                        },
                        {
                          "hexValue": "5454",
                          "id": 25831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "252:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2ac50a34f0da9360cfd7e529a34ccdaa61aa98e2a0ac0928bf981af8e73352ba",
                            "typeString": "literal_string \"TT\""
                          },
                          "value": "TT"
                        },
                        {
                          "hexValue": "3138",
                          "id": 25832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "258:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        {
                          "hexValue": "3235303030303030303030303030303030303030303030",
                          "id": 25833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "262:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25000000000000000000000_by_1",
                            "typeString": "int_const 25000000000000000000000"
                          },
                          "value": "25000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2ac50a34f0da9360cfd7e529a34ccdaa61aa98e2a0ac0928bf981af8e73352ba",
                            "typeString": "literal_string \"TT\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          {
                            "typeIdentifier": "t_rational_25000000000000000000000_by_1",
                            "typeString": "int_const 25000000000000000000000"
                          }
                        ],
                        "id": 25829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "229:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_uint256_$returns$_t_contract$_ERC20_$25730_$",
                          "typeString": "function (string memory,string memory,uint8,uint256) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 25828,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25827,
                            "name": "ERC20",
                            "nameLocations": [
                              "233:5:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25730,
                            "src": "233:5:16"
                          },
                          "referencedDeclaration": 25730,
                          "src": "233:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$25730",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 25834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "229:57:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$25730",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "221:65:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$25730",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 25836,
                  "nodeType": "ExpressionStatement",
                  "src": "221:65:16"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "196:5:16",
            "parameters": {
              "id": 25824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:16"
            },
            "returnParameters": {
              "id": 25825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:16"
            },
            "scope": 25958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25849,
            "nodeType": "FunctionDefinition",
            "src": "299:79:16",
            "nodes": [],
            "body": {
              "id": 25848,
              "nodeType": "Block",
              "src": "326:52:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25842,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25823,
                            "src": "345:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25730",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 25843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "351:4:16",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25541,
                          "src": "345:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 25844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "345:12:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "54657374546f6b656e",
                        "id": 25845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "359:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                          "typeString": "literal_string \"TestToken\""
                        },
                        "value": "TestToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                          "typeString": "literal_string \"TestToken\""
                        }
                      ],
                      "id": 25841,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1974,
                        1999,
                        2012,
                        2028,
                        2070,
                        2112,
                        2154,
                        2191,
                        2228,
                        2265,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "336:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25847,
                  "nodeType": "ExpressionStatement",
                  "src": "336:35:16"
                }
              ]
            },
            "functionSelector": "cc8668de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testName",
            "nameLocation": "308:8:16",
            "parameters": {
              "id": 25839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:2:16"
            },
            "returnParameters": {
              "id": 25840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:16"
            },
            "scope": 25958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25860,
            "nodeType": "FunctionDefinition",
            "src": "384:76:16",
            "nodes": [],
            "body": {
              "id": 25859,
              "nodeType": "Block",
              "src": "413:47:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25853,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25823,
                            "src": "432:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25730",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 25854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "438:6:16",
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25549,
                          "src": "432:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 25855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "432:14:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "5454",
                        "id": 25856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "448:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ac50a34f0da9360cfd7e529a34ccdaa61aa98e2a0ac0928bf981af8e73352ba",
                          "typeString": "literal_string \"TT\""
                        },
                        "value": "TT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ac50a34f0da9360cfd7e529a34ccdaa61aa98e2a0ac0928bf981af8e73352ba",
                          "typeString": "literal_string \"TT\""
                        }
                      ],
                      "id": 25852,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1974,
                        1999,
                        2012,
                        2028,
                        2070,
                        2112,
                        2154,
                        2191,
                        2228,
                        2265,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "423:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25858,
                  "nodeType": "ExpressionStatement",
                  "src": "423:30:16"
                }
              ]
            },
            "functionSelector": "77fc70c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSymbol",
            "nameLocation": "393:10:16",
            "parameters": {
              "id": 25850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "403:2:16"
            },
            "returnParameters": {
              "id": 25851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:16"
            },
            "scope": 25958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25871,
            "nodeType": "FunctionDefinition",
            "src": "466:78:16",
            "nodes": [],
            "body": {
              "id": 25870,
              "nodeType": "Block",
              "src": "497:47:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25864,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25823,
                            "src": "516:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25730",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 25865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "522:8:16",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25557,
                          "src": "516:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 25866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "516:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 25867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "534:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 25863,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1974,
                        1999,
                        2012,
                        2028,
                        2070,
                        2112,
                        2154,
                        2191,
                        2228,
                        2265,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "507:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "507:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25869,
                  "nodeType": "ExpressionStatement",
                  "src": "507:30:16"
                }
              ]
            },
            "functionSelector": "5d4696cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDecimals",
            "nameLocation": "475:12:16",
            "parameters": {
              "id": 25861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:2:16"
            },
            "returnParameters": {
              "id": 25862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "497:0:16"
            },
            "scope": 25958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25882,
            "nodeType": "FunctionDefinition",
            "src": "550:105:16",
            "nodes": [],
            "body": {
              "id": 25881,
              "nodeType": "Block",
              "src": "584:71:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25875,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25823,
                            "src": "603:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25730",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 25876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "609:11:16",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25565,
                          "src": "603:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 25877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "603:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3235303030303030303030303030303030303030303030",
                        "id": 25878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "624:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25000000000000000000000_by_1",
                          "typeString": "int_const 25000000000000000000000"
                        },
                        "value": "25000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_25000000000000000000000_by_1",
                          "typeString": "int_const 25000000000000000000000"
                        }
                      ],
                      "id": 25874,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1974,
                        1999,
                        2012,
                        2028,
                        2070,
                        2112,
                        2154,
                        2191,
                        2228,
                        2265,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "594:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25880,
                  "nodeType": "ExpressionStatement",
                  "src": "594:54:16"
                }
              ]
            },
            "functionSelector": "eb7492d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTotalSupply",
            "nameLocation": "559:15:16",
            "parameters": {
              "id": 25872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:2:16"
            },
            "returnParameters": {
              "id": 25873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:16"
            },
            "scope": 25958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25897,
            "nodeType": "FunctionDefinition",
            "src": "661:137:16",
            "nodes": [],
            "body": {
              "id": 25896,
              "nodeType": "Block",
              "src": "712:86:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25890,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "759:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Test_$25958",
                                  "typeString": "contract ERC20Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Test_$25958",
                                  "typeString": "contract ERC20Test"
                                }
                              ],
                              "id": 25889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "751:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25888,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "751:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "751:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25886,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25823,
                            "src": "735:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25730",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 25887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "741:9:16",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25577,
                          "src": "735:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "735:30:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3235303030303030303030303030303030303030303030",
                        "id": 25893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "767:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25000000000000000000000_by_1",
                          "typeString": "int_const 25000000000000000000000"
                        },
                        "value": "25000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_25000000000000000000000_by_1",
                          "typeString": "int_const 25000000000000000000000"
                        }
                      ],
                      "id": 25885,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1974,
                        1999,
                        2012,
                        2028,
                        2070,
                        2112,
                        2154,
                        2191,
                        2228,
                        2265,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "726:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25895,
                  "nodeType": "ExpressionStatement",
                  "src": "726:65:16"
                }
              ]
            },
            "functionSelector": "2bcb3270",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCreaterReceivedInitialSupply",
            "nameLocation": "670:32:16",
            "parameters": {
              "id": 25883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:16"
            },
            "returnParameters": {
              "id": 25884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:16"
            },
            "scope": 25958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25957,
            "nodeType": "FunctionDefinition",
            "src": "804:363:16",
            "nodes": [],
            "body": {
              "id": 25956,
              "nodeType": "Block",
              "src": "835:332:16",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    25901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25901,
                      "mutability": "mutable",
                      "name": "fromBalanceBefore",
                      "nameLocation": "853:17:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25956,
                      "src": "845:25:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "845:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25909,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25906,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "897:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Test_$25958",
                              "typeString": "contract ERC20Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Test_$25958",
                              "typeString": "contract ERC20Test"
                            }
                          ],
                          "id": 25905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "889:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25904,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "889:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "889:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25902,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25823,
                        "src": "873:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25730",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 25903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "879:9:16",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25577,
                      "src": "873:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "845:58:16"
                },
                {
                  "assignments": [
                    25911
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25911,
                      "mutability": "mutable",
                      "name": "toBalanceBefore",
                      "nameLocation": "921:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 25956,
                      "src": "913:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25910,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "913:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25919,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "963:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "955:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25914,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "955:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "955:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25912,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25823,
                        "src": "939:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25730",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 25913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "945:9:16",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25577,
                      "src": "939:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 25918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "913:53:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "999:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "991:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25923,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "991:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "991:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230653138",
                        "id": 25927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1003:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 25920,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25823,
                        "src": "976:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$25730",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 25922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "982:8:16",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25619,
                      "src": "976:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25929,
                  "nodeType": "ExpressionStatement",
                  "src": "976:33:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 25935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1053:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 25934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1045:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25933,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1045:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1045:10:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25931,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25823,
                            "src": "1029:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25730",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 25932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1035:9:16",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25577,
                          "src": "1029:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1029:27:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25938,
                          "name": "toBalanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25911,
                          "src": "1058:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3230653138",
                          "id": 25939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1076:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000000000000000000_by_1",
                            "typeString": "int_const 20000000000000000000"
                          },
                          "value": "20e18"
                        },
                        "src": "1058:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25930,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1974,
                        1999,
                        2012,
                        2028,
                        2070,
                        2112,
                        2154,
                        2191,
                        2228,
                        2265,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1020:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25942,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25948,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1125:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Test_$25958",
                                  "typeString": "contract ERC20Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Test_$25958",
                                  "typeString": "contract ERC20Test"
                                }
                              ],
                              "id": 25947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1117:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25946,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1117:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1117:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25944,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25823,
                            "src": "1101:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$25730",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 25945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1107:9:16",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25577,
                          "src": "1101:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1101:30:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25951,
                          "name": "fromBalanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25901,
                          "src": "1133:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "3230653138",
                          "id": 25952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1153:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000000000000000000_by_1",
                            "typeString": "int_const 20000000000000000000"
                          },
                          "value": "20e18"
                        },
                        "src": "1133:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25943,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1974,
                        1999,
                        2012,
                        2028,
                        2070,
                        2112,
                        2154,
                        2191,
                        2228,
                        2265,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1092:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:67:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25955,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:67:16"
                }
              ]
            },
            "functionSelector": "d591221f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransfer",
            "nameLocation": "813:12:16",
            "parameters": {
              "id": 25898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:2:16"
            },
            "returnParameters": {
              "id": 25899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:0:16"
            },
            "scope": 25958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25819,
              "name": "Test",
              "nameLocations": [
                "151:4:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8158,
              "src": "151:4:16"
            },
            "id": 25820,
            "nodeType": "InheritanceSpecifier",
            "src": "151:4:16"
          }
        ],
        "canonicalName": "ERC20Test",
        "contractDependencies": [
          25730
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25958,
          8158,
          1843,
          1840,
          8116,
          5144,
          4755,
          3207,
          2671,
          1786
        ],
        "name": "ERC20Test",
        "nameLocation": "138:9:16",
        "scope": 25959,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 16
}